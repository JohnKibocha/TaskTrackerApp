// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskTrackerApp.Data;

#nullable disable

namespace TaskTrackerApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250327163146_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("TaskTrackerApp.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            StatusName = "Not Started"
                        },
                        new
                        {
                            StatusId = 2,
                            StatusName = "In Progress"
                        },
                        new
                        {
                            StatusId = 3,
                            StatusName = "Completed"
                        });
                });

            modelBuilder.Entity("TaskTrackerApp.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("TaskId");

                    b.HasIndex("StatusId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            DateCreated = new DateTime(2025, 3, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Initialize ASP.NET Core MVC project and configure EF Core",
                            DueDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 1,
                            StatusId = 1,
                            Title = "Set up project"
                        },
                        new
                        {
                            TaskId = 2,
                            DateCreated = new DateTime(2025, 3, 25, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            Description = "Define Task and Status models with relationships and validation",
                            DueDate = new DateTime(2025, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 2,
                            StatusId = 2,
                            Title = "Create models"
                        },
                        new
                        {
                            TaskId = 3,
                            DateCreated = new DateTime(2025, 3, 25, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Scaffold controller and Razor views for CRUD operations",
                            DueDate = new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 3,
                            StatusId = 2,
                            Title = "Build task views"
                        },
                        new
                        {
                            TaskId = 4,
                            DateCreated = new DateTime(2025, 3, 25, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            Description = "Seed task statuses and initial tasks in OnModelCreating",
                            DueDate = new DateTime(2025, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 2,
                            StatusId = 3,
                            Title = "Seed default data"
                        },
                        new
                        {
                            TaskId = 5,
                            DateCreated = new DateTime(2025, 3, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Run the app, test all features, and prepare final ZIP submission",
                            DueDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 1,
                            StatusId = 1,
                            Title = "Test and submit"
                        });
                });

            modelBuilder.Entity("TaskTrackerApp.Models.Task", b =>
                {
                    b.HasOne("TaskTrackerApp.Models.Status", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TaskTrackerApp.Models.Status", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
